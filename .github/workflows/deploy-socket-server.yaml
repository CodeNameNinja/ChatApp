name: deploy-socket-server-service

on:
  push:
    branches:
      - main
      - staging
    paths:
      - "apps/api/socket-server/**"

  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Build Docker Image
        run: |
          IMAGE_TAG=${{ github.ref_name == 'main' && 'latest' || 'staging' }}
          docker build -f apps/api/socket-server/Dockerfile -t socket-server:$IMAGE_TAG .

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Push Docker Image to ECR
        run: |
          IMAGE_TAG=${{ github.ref_name == 'main' && 'latest' || 'staging' }}
          IMAGE_URI=645763912818.dkr.ecr.af-south-1.amazonaws.com/socket-server:$IMAGE_TAG
          docker tag socket-server:$IMAGE_TAG $IMAGE_URI
          docker push $IMAGE_URI
        env:
          AWS_REGION: af-south-1
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  restart-deployment:
    needs: [ build-and-push ]
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.65 }}
          aws-region: af-south-1

      - name: Restart socket-server Deployment
        run: |
          kubectl rollout restart deployment socket-server-depl
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}